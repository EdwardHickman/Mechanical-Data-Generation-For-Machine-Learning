# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'untitled.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.
import os

from PyQt5 import QtCore, QtGui, QtWidgets

# import selenium_utils
# import scrape
from PyQt5.QtGui import QPalette
from PyQt5.QtCore import Qt

c = 0


def image_assign(buttons):
    global c
    """
    This function assigns the images of graphs to each of the buttons in the gui
    :param buttons: A list of the button objects
    :param c: a counter that tracks how many images have been shown
    """
    filepath = "output_png"
    for i in range(9):
        try:
            current_button = buttons[i]
            current_path = "output_png/" + os.listdir(filepath)[c + i]
            current_button.setIcon(QtGui.QIcon(current_path))
            current_button.setIconSize(QtCore.QSize(367, 267))
        except IndexError:
            current_button = buttons[i]
            current_button.setIcon(QtGui.QIcon())
            print("folder empty")


def next_button(buttons):
    global c
    if c + 9 < len(os.listdir("output_csv")):
        c += 9
    image_assign(buttons)
    return c


def prev_button(buttons):
    global c
    if c < 8:
        c = 0
        image_assign(buttons)
    else:
        c -= 9
        image_assign(buttons)
    return c


def selection_screen(self, MainWindow):
    buttons = []

    MainWindow.setObjectName("MainWindow")
    MainWindow.resize(1119, 892)
    MainWindow.setMaximumSize(QtCore.QSize(1119, 892))
    self.centralwidget = QtWidgets.QWidget(MainWindow)
    self.centralwidget.setObjectName("centralwidget")
    self.pushButton = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton.setGeometry(QtCore.QRect(0, 0, 371, 271))
    self.pushButton.setStyleSheet("background-color:white")
    self.pushButton.setText("")
    self.pushButton.setIconSize(QtCore.QSize(367, 267))
    self.pushButton.setObjectName("pushButton")
    buttons.append(self.pushButton)
    # self.pushButton.clicked.connect(lambda: webplot.get_images(2, 10))
    self.pushButton.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[0 + c])))
    self.previous_button = QtWidgets.QPushButton(self.centralwidget)
    self.previous_button.setGeometry(QtCore.QRect(950, 830, 75, 23))
    self.previous_button.setObjectName("previous_button")
    self.previous_button.setText("Previous")
    self.previous_button.clicked.connect(lambda: prev_button(buttons))
    self.next_button = QtWidgets.QPushButton(self.centralwidget)
    self.next_button.setGeometry(QtCore.QRect(1020, 830, 75, 23))
    self.next_button.setObjectName("next_button")
    self.next_button.setText("Next")
    self.next_button.clicked.connect(lambda: next_button(buttons))
    self.pushButton_4 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_4.setGeometry(QtCore.QRect(370, 0, 371, 271))
    self.pushButton_4.setStyleSheet("background-color:white")
    self.pushButton_4.setText("")
    self.pushButton_4.setIconSize(QtCore.QSize(367, 267))
    self.pushButton_4.setObjectName("pushButton_4")
    buttons.append(self.pushButton_4)
    self.pushButton_4.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[1 + c])))
    self.pushButton_5 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_5.setGeometry(QtCore.QRect(740, 0, 371, 271))
    self.pushButton_5.setStyleSheet("background-color:white")
    self.pushButton_5.setText("")
    self.pushButton_5.setObjectName("pushButton_5")
    buttons.append(self.pushButton_5)
    self.pushButton_5.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[2 + c])))
    self.pushButton_6 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_6.setGeometry(QtCore.QRect(0, 280, 371, 271))
    self.pushButton_6.setStyleSheet("background-color:white")
    self.pushButton_6.setText("")
    self.pushButton_6.setObjectName("pushButton_6")
    buttons.append(self.pushButton_6)
    self.pushButton_6.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[3 + c])))
    self.pushButton_7 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_7.setGeometry(QtCore.QRect(370, 280, 371, 271))
    self.pushButton_7.setStyleSheet("background-color:white")
    self.pushButton_7.setText("")
    self.pushButton_7.setObjectName("pushButton_7")
    buttons.append(self.pushButton_7)
    self.pushButton_7.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[4 + c])))
    self.pushButton_8 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_8.setGeometry(QtCore.QRect(740, 280, 371, 271))
    self.pushButton_8.setStyleSheet("background-color:white")
    self.pushButton_8.setText("")
    self.pushButton_8.setObjectName("pushButton_8")
    buttons.append(self.pushButton_8)
    self.pushButton_8.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[5 + c])))
    self.pushButton_9 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_9.setGeometry(QtCore.QRect(0, 560, 371, 271))
    self.pushButton_9.setStyleSheet("background-color:white")
    self.pushButton_9.setText("")
    self.pushButton_9.setObjectName("pushButton_9")
    buttons.append(self.pushButton_9)
    self.pushButton_9.clicked.connect(lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[6 + c])))
    self.pushButton_10 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_10.setGeometry(QtCore.QRect(370, 560, 371, 271))
    self.pushButton_10.setStyleSheet("background-color:white")
    self.pushButton_10.setText("")
    self.pushButton_10.setObjectName("pushButton_10")
    buttons.append(self.pushButton_10)
    self.pushButton_10.clicked.connect(
        lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[7 + c])))
    self.pushButton_11 = QtWidgets.QPushButton(self.centralwidget)
    self.pushButton_11.setGeometry(QtCore.QRect(740, 560, 371, 271))
    self.pushButton_11.setStyleSheet("background-color:white")
    self.pushButton_11.setText("")
    self.pushButton_11.setObjectName("pushButton_11")
    self.pushButton_11.clicked.connect(
        lambda: os.startfile(os.path.join("output_csv", os.listdir("output_csv")[8 + c])))
    buttons.append(self.pushButton_11)
    MainWindow.setCentralWidget(self.centralwidget)
    self.menubar = QtWidgets.QMenuBar(MainWindow)
    self.menubar.setGeometry(QtCore.QRect(0, 0, 1119, 21))
    self.menubar.setObjectName("menubar")
    MainWindow.setMenuBar(self.menubar)
    self.statusbar = QtWidgets.QStatusBar(MainWindow)
    self.statusbar.setObjectName("statusbar")
    MainWindow.setStatusBar(self.statusbar)
    self.retranslateUi(MainWindow)
    image_assign(buttons)

    QtCore.QMetaObject.connectSlotsByName(MainWindow)

    self.set_dark_mode(MainWindow)


def set_dark_mode(self, main_window):
    # set the dark color palette
    palette = QPalette()
    palette.setColor(palette.Window, Qt.black)
    palette.setColor(palette.WindowText, Qt.white)
    palette.setColor(palette.Base, Qt.darkGray)
    palette.setColor(palette.AlternateBase, Qt.gray)
    palette.setColor(palette.ToolTipBase, Qt.white)
    palette.setColor(palette.ToolTipText, Qt.white)
    palette.setColor(palette.Text, Qt.white)
    palette.setColor(palette.Button, Qt.darkGray)
    palette.setColor(palette.ButtonText, Qt.white)
    palette.setColor(palette.BrightText, Qt.red)
    self.setPalette(palette)
    main_window.setPalette(palette)
    # Set the dark style sheet.
    style_sheet = (
        """
            QWidget {
                background-color: #222;
                color: #fff;
            }
            QPushButton {
                background-color: #555;
                color: #fff;
                border: 1px solid #333;
                border-radius: 3px;
                padding: 5px;
            }
            QPushButton:hover {
                background-color: #777;
            }
            QPushButton:pressed {
                background-color: #999;
            }"""
    )
    self.setStyleSheet(style_sheet)
    main_window.setStyleSheet(style_sheet)


def retranslateUi(self, MainWindow):
    _translate = QtCore.QCoreApplication.translate
    MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
    self.previous_button.setText(_translate("MainWindow", "Previous"))
    self.next_button.setText(_translate("MainWindow", "Next"))
